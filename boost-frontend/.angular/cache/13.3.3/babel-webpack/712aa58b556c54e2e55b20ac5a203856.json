{"ast":null,"code":"import { environment } from \"../../environments/environment\";\nimport { Subject } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\n/**\n * @author Nordine Bittich\n */\n\nexport class ProfileService {\n  http;\n  userEvent = new Subject();\n\n  constructor(http) {\n    this.http = http;\n  }\n\n  countFollowing(next) {\n    return this.http.get(environment.backendUrl + '/subscription/following-count', {}).subscribe(next, err => {\n      console.log(err);\n    }, () => {});\n  }\n\n  countFollowers(next) {\n    return this.http.get(environment.backendUrl + '/subscription/followers-count', {}).subscribe(next, err => {\n      console.log(err);\n    }, () => {});\n  }\n\n  updateProfile(profile, callBackNext, callbackError, callbackComplete) {\n    return this.http.post(environment.backendUrl + '/user/profile', profile).subscribe(datas => {\n      if (callBackNext) callBackNext(datas);\n    }, err => {\n      if (callbackError) callbackError(err);\n    }, () => {\n      if (callbackComplete) callbackComplete();\n    });\n  }\n\n  static ɵfac = function ProfileService_Factory(t) {\n    return new (t || ProfileService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProfileService,\n    factory: ProfileService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":null,"metadata":{},"sourceType":"module"}