{"ast":null,"code":"import { environment } from \"../../environments/environment\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../service/authenticationservice\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/router\";\n\nfunction ImageLoaderComponent_img_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 2);\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r0.customClass);\n    i0.ɵɵproperty(\"src\", ctx_r0.imageBase64, i0.ɵɵsanitizeUrl);\n  }\n}\n\nfunction ImageLoaderComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵelement(1, \"div\")(2, \"div\")(3, \"div\")(4, \"div\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let ImageLoaderComponent = /*#__PURE__*/(() => {\n  class ImageLoaderComponent {\n    constructor(http, authenticationService, location, route) {\n      this.http = http;\n      this.authenticationService = authenticationService;\n      this.location = location;\n      this.route = route;\n      this.customClass = \"img-fluid container\";\n      this.width = \"100%\";\n      this.height = \"100%\";\n    }\n\n    ngOnInit() {\n      let url = environment.backendUrl + '/upload/' + this.imageId;\n      this.http.get(url, {\n        responseType: 'blob'\n      }).subscribe(datas => {\n        const reader = new FileReader();\n        reader.readAsDataURL(datas);\n\n        reader.onloadend = () => {\n          this.imageBase64 = reader.result;\n        };\n      }, err => {\n        console.log(err);\n      }, () => {});\n    }\n\n  }\n\n  ImageLoaderComponent.ɵfac = function ImageLoaderComponent_Factory(t) {\n    return new (t || ImageLoaderComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.AuthenticationService), i0.ɵɵdirectiveInject(i3.Location), i0.ɵɵdirectiveInject(i4.ActivatedRoute));\n  };\n\n  ImageLoaderComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ImageLoaderComponent,\n    selectors: [[\"app-image-loader\"]],\n    inputs: {\n      customClass: \"customClass\",\n      imageId: \"imageId\",\n      width: \"width\",\n      height: \"height\"\n    },\n    decls: 2,\n    vars: 2,\n    consts: [[3, \"class\", \"src\", 4, \"ngIf\"], [\"class\", \"lds-ellipsis\", 4, \"ngIf\"], [3, \"src\"], [1, \"lds-ellipsis\"]],\n    template: function ImageLoaderComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, ImageLoaderComponent_img_0_Template, 1, 3, \"img\", 0);\n        i0.ɵɵtemplate(1, ImageLoaderComponent_div_1_Template, 5, 0, \"div\", 1);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.imageBase64);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.imageBase64);\n      }\n    },\n    directives: [i3.NgIf],\n    styles: [\"\"]\n  });\n  return ImageLoaderComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}