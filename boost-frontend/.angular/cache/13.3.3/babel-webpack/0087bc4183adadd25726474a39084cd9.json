{"ast":null,"code":"import { HttpParams } from \"@angular/common/http\";\nimport { environment } from \"../../environments/environment\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"./authenticationservice\";\nexport class ChapterService {\n  http;\n  router;\n  authenticationService;\n\n  constructor(http, router, authenticationService) {\n    this.http = http;\n    this.router = router;\n    this.authenticationService = authenticationService;\n  }\n\n  updateChapter(chap, next, err = e => console.log(e)) {\n    this.http.request('post', `${environment.backendUrl}/book/chapter/edit`, {\n      body: chap\n    }).subscribe(next, err, () => {});\n  }\n\n  updateCurrentChapter(chapter, next, err = e => console.log(e)) {\n    this.http.request('post', `${environment.backendUrl}/user/chapter/update/current`, {\n      params: new HttpParams().set('chapterId', chapter.id)\n    }).subscribe(next, err, () => {});\n  }\n\n  publish(newChapter, next, err = e => console.log(e)) {\n    this.http.request('put', `${environment.backendUrl}/book/chapter/publish`, {\n      body: newChapter\n    }).subscribe(next, err, () => {});\n  }\n\n  deleteChapter(ch, next) {\n    this.http.request('delete', `${environment.backendUrl}/book/chapter/${ch.id}`, {}).subscribe(next, err => {\n      console.log(err);\n    }, () => {});\n  }\n\n  getChapters(event, bookId, next, pageSize = 3) {\n    this.http.get(`${environment.backendUrl}/book/${bookId}/chapters?size=${pageSize}&page=${event - 1}`, {}).subscribe(next, err => {\n      console.log(err);\n    }, () => {});\n  }\n\n  getCurrentChapter(next) {\n    this.http.get(`${environment.backendUrl}/user/chapter/current`, {}).subscribe(next, err => {\n      console.log(err);\n    }, () => {});\n  }\n\n  userHistory(next) {\n    this.http.get(environment.backendUrl + '/user/chapter/history', {}).subscribe(next, err => {\n      console.log(err);\n    }, () => {});\n  }\n\n  static ɵfac = function ChapterService_Factory(t) {\n    return new (t || ChapterService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router), i0.ɵɵinject(i3.AuthenticationService));\n  };\n  static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ChapterService,\n    factory: ChapterService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":null,"metadata":{},"sourceType":"module"}